@page

@{
    ViewBag.PageTitle = _localizer["Add Inpatient"];
}

@functions{

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    [Display(Name = "Patient Identity No.")]
    public string IdentityNo { get; set; }

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    [Display(Name = "Patient First Name")]
    public string FirstName { get; set; }

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    [Display(Name = "Patient Last Name")]
    public string LastName { get; set; }

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    [Display(Name = "Patient Father Name")]
    public string FatherName { get; set; }

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    [Display(Name = "Patient Mother Name")]
    public string MotherName { get; set; }


    [BindProperty]
    [Required]
    [DataType(DataType.Date)]
    [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
    [Display(Name = "Birth Date")]
    public DateTime BirthDate { get; set; } = DateTime.Today;

    [BindProperty]
    public Gender Gender { get; set; }

    [BindProperty]
    [Display(Name = "Admission Type")]
    public int AdmissionTypeId { get; set; }

    [BindProperty]
    [Display(Name = "Ward")]
    [Required]
    public int? WardId { get; set; }

    [BindProperty(SupportsGet = true)]
    [Display(Name = "Booking")]
    public int? BookingId { get; set; }

    public Booking Booking { get; set; }


    public SelectList AdmissionTypeSelect { get; set; }
    public SelectList WardSelect { get; set; }


    public async Task OnGet()
    {
        await GetListsAsync();
    }

    private async Task GetListsAsync()
    {
        AdmissionTypeSelect = await _lm.AdmissionTypeSelect();
        if(BookingId.HasValue)
        {
            Booking = (await _mem.GetBookings()).FirstOrDefault(x => x.Id == BookingId);
            WardId = (await _mem.GetRooms()).Where(x => x.RoomNo == Booking.RoomNo).Select(x => x.WardId).FirstOrDefault();
        }
        WardSelect = await _lm.WardSelect();
    }

    public async Task<IActionResult> OnPostAsync()
    {
        if(ModelState.IsValid)
        {
            Patient patient = (await _ctx.Patients.Where(x => x.IdentityNo == this.IdentityNo).FirstOrDefaultAsync() ) ??
                new() { IdentityNo = IdentityNo, FirstName = FirstName, LastName = LastName, FatherName = FatherName, MotherName = MotherName, BirthDate = BirthDate, Gender = Gender };
            Booking = (await _mem.GetBookings()).FirstOrDefault(x => x.Id == BookingId);
            DateTime now = DateTime.Now;
            Inpatient inpatient = new()
            {
                Patient = patient,
                AdmissionDate = now,
                AdmissionTypeId = AdmissionTypeId,
                BookingId = BookingId,
                WardId = WardId.Value,
                RoomNo = Booking?.RoomNo,
                ReferrerId = Booking?.DoctorId,
                AdmissionNote = Booking?.Message,
                Statuses = new()
                {
                    new() { Name = "New", StatusTime = now, UserName = User.Identity.Name }
                }
            };


            _ctx.Inpatients.Add(inpatient);
            await _ctx.SaveChangesAsync();
            //_mem.Reset(nameof(Inpatient));

            if(BookingId.HasValue)
            {
                var allocs = await _ctx.RoomAllocations
                     .Where(x => x.BookingId == BookingId)
                     .ToListAsync();
                foreach (var a in allocs)
                {
                    a.InpatientId = inpatient.Id;
                    a.PatientId = inpatient.PatientId;
                    a.Status = RoomStatus.Reserved;

                }
                await _ctx.SaveChangesAsync();
                _mem.Reset(nameof(Inpatient));
                _mem.Reset(nameof(Booking));
            }

            return RedirectToPage("./Inpatients");
        }

        await GetListsAsync();
        return Page();
    }


}

<div class="content">



    <div class="row">
        <div class="col-sm-5 col-5">
            <h4 class="page-title ">@ViewBag.PageTitle</h4>
        </div>
    </div>


    <div class="row">
        <div class="col-lg-8 offset-lg-2">


            <form method="post">

                <div class="form-group">
                    <label asp-for="IdentityNo" class="col-form-label"></label>
                    <input asp-for="IdentityNo" class="form-control" />
                    <span asp-validation-for="IdentityNo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="FirstName" class="col-form-label"></label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="LastName" class="col-form-label"></label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="FatherName" class="col-form-label"></label>
                    <input asp-for="FatherName" class="form-control" />
                    <span asp-validation-for="FatherName" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="MotherName" class="col-form-label"></label>
                    <input asp-for="MotherName" class="form-control" />
                    <span asp-validation-for="MotherName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="BirthDate" class="col-form-label"></label>
                    <input asp-for="BirthDate" class="form-control" />
                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Gender" class="col-form-label"></label>
                    <select asp-for="Gender" asp-items="Html.GetEnumSelectList<Gender>()" class="form-control"></select>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="AdmissionTypeId" class="col-form-label"></label>
                    <select asp-for="AdmissionTypeId" asp-items="AdmissionTypeSelect" class="form-control"></select>
                    <span asp-validation-for="AdmissionTypeId" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="WardId" class="col-form-label"></label>
                    <select asp-for="WardId" asp-items="WardSelect" class="form-control"></select>
                    <span asp-validation-for="WardId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.Name" class="col-form-label"></label>
                    <input disabled asp-for="Booking.Name" class="form-control" />
                    <input asp-for="BookingId" type="hidden" class="form-control" />
                    <span asp-validation-for="Booking.Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.From" class="col-form-label"></label>
                    <input disabled asp-for="Booking.From" class="form-control" />
                    <span asp-validation-for="Booking.From" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.To" class="col-form-label"></label>
                    <input disabled asp-for="Booking.To" class="form-control" />
                    <span asp-validation-for="Booking.To" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.Doctor.Name" class="col-form-label"></label>
                    <input disabled asp-for="Booking.Doctor.Name" class="form-control" />
                    <span asp-validation-for="Booking.Doctor.Name" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.DownPayment" class="col-form-label"></label>
                    <input disabled asp-for="Booking.DownPayment" class="form-control" />
                    <span asp-validation-for="Booking.DownPayment" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.Message" class="col-form-label"></label>
                    <textarea disabled asp-for="Booking.Message" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Booking.Message" class="text-danger"></span>
                </div>

                <div class="m-t-20 text-center">
                    <button class="btn btn-primary submit-btn">@_localizer["Save"]</button>
                </div>
            </form>


        </div>
    </div>




</div>

@section scripts
{

    <partial name="_ValidationScriptsPartial" />


}