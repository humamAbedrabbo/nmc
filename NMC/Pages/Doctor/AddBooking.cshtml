@page

@using Microsoft.EntityFrameworkCore

@{
    ViewBag.PageTitle = _localizer["Add Booking"];
}

@functions{

    [BindProperty]
    [Required]
    [StringLength(50, MinimumLength = 1)]
    public string Name { get; set; }

    [BindProperty]
    [Required]
    public string Message { get; set; }

    [BindProperty(SupportsGet = true)]
    [Display(Name = "Doctor")]
    public int? DoctorId { get; set; }

    [BindProperty]
    [Display(Name = "Down Payment")]
    public int DownPayment { get; set; }

    [BindProperty]
    [Display(Name = "Room No.")]
    public string RoomNo { get; set; }

    [BindProperty]
    public string DaysIndex { get; set; }

    public string Lang { get; set; }
    public bool IsArabic => Lang?.ToLower() == "ar";

    public SelectList DoctorsSelect { get; set; }

    public List<Room> Rooms { get; set; }
    public List<Ward> Wards { get; set; }
    public List<RoomAllocation> Allocations { get; set; }
    public DateTime From { get; set; }
    public DateTime To { get; set; }

    public async Task OnGetAsync()
    {
        Lang = User.GetUserLanguage();
        DoctorsSelect = await _lm.DoctorSelect(User.GetUserDoctorId(), Lang);
        DaysIndex = "";
        From = DateTime.Today;
        To = From.AddDays(7);
        await GetRooms();
    }

    private async Task GetRooms()
    {
        Rooms = (await _mem.GetRooms())?.ToList();
        Wards = Rooms?.OrderBy(x => x.Floor).Select(x => x.Ward).Distinct().ToList();
        Allocations = (await _ctx.RoomAllocations.Where(x => x.Date >= From && x.Date <= To).ToListAsync());

    }


    public async Task<IActionResult> OnPostAsync()
    {
        ;
        if(ModelState.IsValid)
        {
            var booking = new Booking
            {
                Name = Name,
                DoctorId = DoctorId,
                RequestDate = DateTime.Now,
                DownPayment = DownPayment,
                Message = Message,
                CreatedBy = User.Identity.Name
            };
            if(!string.IsNullOrEmpty(RoomNo) && !string.IsNullOrEmpty(DaysIndex))
            {
                var idx = DaysIndex.Split(',').Where(x => int.TryParse(x, out int r)).Select(x => int.Parse(x)).ToArray();
                DateTime d1 = DateTime.Today.AddDays(idx.Min());
                DateTime d2 = DateTime.Today.AddDays(idx.Max());
                for (DateTime d = d1; d <= d2; d = d.AddDays(1))
                {
                    booking.Allocations.Add(new RoomAllocation { Date = d, RoomNo = RoomNo, Text = booking.Name, Status = RoomStatus.Booked });
                }

                _ctx.Bookings.Add(booking);
                await _ctx.SaveChangesAsync();
                _mem.Reset(nameof(Booking));
                return RedirectToPage("./Bookings");
                //
            }

        }

        await GetRooms();
        return Page();
    }

}

<div class="content">
    <div class="row">
        <div class="col-sm-5 col-5">
            <h4 class="page-title">@ViewBag.PageTitle</h4>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="card-box">
                <div class="card-body">
                    <form method="post">
                        <div class="form-group">
                            <label asp-for="Name"></label>
                            <input asp-for="Name" class="form-control">
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DoctorId">@_localizer["Doctor"]</label>
                            <select asp-for="DoctorId" asp-items="DoctorsSelect" class="form-control">
                                <option></option>
                            </select>
                            <span asp-validation-for="DoctorId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Message"></label>
                            <textarea rows="3" asp-for="Message" class="form-control">
                    </textarea>
                            <span asp-validation-for="Message" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DownPayment"></label>
                            <input asp-for="DownPayment" class="form-control">
                            <span asp-validation-for="DownPayment" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="RoomNo"></label>
                            <input readonly asp-for="RoomNo" class="form-control">
                            <span asp-validation-for="RoomNo" class="text-danger"></span>
                        </div>
                        <input type="hidden" asp-for="DaysIndex" class="form-control">

                        <div class="m-t-20 text-center">
                            <button class="btn btn-primary submit-btn">@_localizer["Save"]</button>
                        </div>
                    </form>
                </div>
            </div>
            
        </div>
        <div class="col-md-9">
            <div class="card-box">
                <div class="card-body">
                    <div class="card-title">@_localizer["Select Room"]</div>
                    <div class="table-responsive">
                        <table class="table text-nowrap text-center table-bordered table-hover">
                            <tr>
                                <th>@_localizer["Room"]</th>
                                @for (DateTime s = From; s <= To; s = s.AddDays(1))
                                {
                                    <th scope="col"><date value="@s" format="ddd MMM dd"></date></th>
                                }
                            </tr>
                            @foreach (var w in Wards)
                            {
                                <tr>
                                    <td class="table-primary text-left" scope="colgroup" colspan="25">@(Model.IsArabic ? w.NameAr : w.Name)</td>
                                </tr>
                                @foreach (var r in Rooms.Where(x => x.WardId == w.Id).OrderBy(x => x.RoomNo))
                                {
                                    int ndx = 0;
                                    <tr>
                                        <th scope="row">@r.Name</th>
                                        @for (DateTime s = From; s <= To; s = s.AddDays(1))
                                        {
                                            string color = "";
                                            string text = "";
                                            string css = "available";
                                            foreach (var aloc in Allocations.Where(x => x.RoomNo == r.RoomNo && x.Date == s))
                                            {
                                                if (aloc.Status == RoomStatus.Reserved)
                                                {
                                                    color = "table-danger";
                                                }
                                                else if (aloc.Status == RoomStatus.Booked)
                                                {
                                                    if (string.IsNullOrEmpty(color))
                                                    {
                                                        color = "table-warning";
                                                    }
                                                }

                                                text = aloc.Status.ToString();
                                            }
                                            if (string.IsNullOrEmpty(color))
                                            {
                                                //color = "table-success";
                                            }
                                            <td class="@color @css" data-room="@r.RoomNo" data-ndx="@ndx">@text</td>

                                            ndx++;
                                        }
                                    </tr>
                                }
                            }

                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{

    <partial name="_ValidationScriptsPartial" />

<script>
    function bookDay(elem) {
        var room = $("#RoomNo").val()
        var days = $("#DaysIndex").val()
        var selRoom = $(elem).data("room");
        var selNdx = $(elem).data("ndx");
        if (room != selRoom) {
            $(".available").removeClass("table-primary")
            days = selNdx + ','
        }
        else {
            days = days + selNdx + ','
        }
        $(elem).addClass("table-primary");
        $("#RoomNo").val(selRoom)
        $("#DaysIndex").val(days)
    }
    $(function () {
        $(".available").click(function (e) { bookDay(e.target) })
    })
</script>
}